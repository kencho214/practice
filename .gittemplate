
# Types:
#
# Must be one of the following:
#
# [build]: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
# [ci]: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)
# [docs]: Documentation only changes
# [feat]: A new feature
# [fix]: A bug fix
# [perf]: A code change that improves performance
# [refactor]: A code change that neither fixes a bug nor adds a feature
# [style]: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
# [test]: Adding missing tests or correcting existing tests

# Format:
#
# [<type>] <subject>
# <BLANK LINE>
# <body>
# <BLANK LINE>
# <footer>
#
# 1. The type and subject is mandatory.
# 2. Any line of the commit message cannot be longer 100 characters!
#    This allows the message to be easier to read on GitHub as well as in various git tools.
# 3. The footer should contain a closing reference to an issue if any.

# Samples:
#
# [fix] need to depend on latest rxjs and zone.js
#
# The version in our package.json gets copied to the one we publish,
# and users need the latest of these.

# Revert:
#
# If the commit reverts a previous commit,
# it should begin with revert:, followed by the header of the reverted commit.
# In the body it should say: This reverts commit <hash>., where the hash is the SHA of the commit being reverted.

# Guideline:
#
# 1. use the imperative, present tense: "change" not "changed" nor "changes"
# 2. don't capitalize the first letter
# 3. no dot (.) at the end

# Body
#
# Just as in the subject, use the imperative, present tense: "change" not "changed" nor "changes".
# The body should include the motivation for the change and contrast this with previous behavior.

# Footer
#
# The footer should contain any information about Breaking Changes and is also the place to reference GitHub issues that this commit Closes.
#
# Breaking Changes should start with the word "BREAKING CHANGE:" with a space or two newlines.
# The rest of the commit message is then used for this.
